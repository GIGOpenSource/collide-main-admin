<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gig.collide.mapper.CategoryMapper">

    <!-- 分类DTO结果映射 -->
    <resultMap id="CategoryDTOResultMap" type="com.gig.collide.dto.categoryDto.CategoryDTO">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="description" property="description"/>
        <result column="parent_id" property="parentId"/>
        <result column="parent_name" property="parentName"/>
        <result column="icon_url" property="iconUrl"/>
        <result column="sort" property="sort"/>
        <result column="level" property="level"/>
        <result column="content_count" property="contentCount"/>
        <result column="status" property="status"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <!-- 分页查询分类列表（支持条件筛选） -->
    <select id="selectCategoryList" resultMap="CategoryDTOResultMap">
        SELECT 
            c.id,
            c.name,
            c.description,
            c.parent_id,
            p.name as parent_name,
            c.icon_url,
            c.sort,
            CASE 
                WHEN c.parent_id = 0 THEN 1
                ELSE (
                    CASE 
                        WHEN (SELECT parent_id FROM t_category WHERE id = c.parent_id AND status != 'inactive') = 0 THEN 2
                        ELSE 3
                    END
                )
            END as level,
            c.content_count,
            c.status,
            c.create_time,
            c.update_time
        FROM t_category c
        LEFT JOIN t_category p ON c.parent_id = p.id AND p.status != 'inactive'
        <where>
            c.status != 'inactive'
            <if test="req.name != null and req.name.trim() != ''">
                AND c.name LIKE CONCAT('%', #{req.name}, '%')
            </if>
            <if test="req.parentId != null">
                AND c.parent_id = #{req.parentId}
            </if>
            <if test="req.parentName != null and req.parentName.trim() != ''">
                AND p.name = #{req.parentName}
            </if>
            <if test="req.level != null">
                AND (
                    CASE 
                        WHEN c.parent_id = 0 THEN 1
                        ELSE (
                            CASE 
                                WHEN (SELECT parent_id FROM t_category WHERE id = c.parent_id AND status != 'inactive') = 0 THEN 2
                                ELSE 3
                            END
                        )
                    END
                ) = #{req.level}
            </if>
            <if test="req.status != null and req.status.trim() != ''">
                AND c.status = #{req.status}
            </if>
            <if test="req.startTime != null">
                AND c.create_time >= #{req.startTime}
            </if>
            <if test="req.endTime != null">
                AND c.create_time &lt;= #{req.endTime}
            </if>
        </where>
        ORDER BY c.parent_id ASC, c.sort ASC, c.create_time ASC
    </select>

    <!-- 根据ID查询分类详情 -->
    <select id="selectCategoryById" resultMap="CategoryDTOResultMap">
        SELECT 
            c.id,
            c.name,
            c.description,
            c.parent_id,
            p.name as parent_name,
            c.icon_url,
            c.sort,
            CASE 
                WHEN c.parent_id = 0 THEN 1
                ELSE (
                    CASE 
                        WHEN (SELECT parent_id FROM t_category WHERE id = c.parent_id AND status != 'inactive') = 0 THEN 2
                        ELSE 3
                    END
                )
            END as level,
            c.content_count,
            c.status,
            c.create_time,
            c.update_time
        FROM t_category c
        LEFT JOIN t_category p ON c.parent_id = p.id AND p.status != 'inactive'
        WHERE c.id = #{id} AND c.status != 'inactive'
    </select>

    <!-- 检查分类名称是否已存在（排除指定ID） -->
    <select id="checkCategoryNameExists" resultType="int">
        SELECT COUNT(*)
        FROM t_category
        WHERE name = #{name} 
        AND parent_id = #{parentId}
        AND status != 'inactive'
        <if test="excludeId != null">
            AND id != #{excludeId}
        </if>
    </select>

    <!-- 检查分类是否存在且未删除 -->
    <select id="checkCategoryExists" resultType="int">
        SELECT COUNT(*)
        FROM t_category
        WHERE id = #{id} AND status != 'inactive'
    </select>

    <!-- 检查分类下是否有子分类 -->
    <select id="countSubCategories" resultType="int">
        SELECT COUNT(*)
        FROM t_category
        WHERE parent_id = #{parentId} AND status != 'inactive'
    </select>

    <!-- 检查分类下是否有内容 -->
    <select id="countContentByCategory" resultType="int">
        SELECT COUNT(*)
        FROM t_content
        WHERE category_id = #{categoryId} AND status != 'OFFLINE'
    </select>

    <!-- 逻辑删除分类（将status置为inactive） -->
    <update id="deleteCategoryById">
        UPDATE t_category
        SET status = 'inactive', update_time = NOW()
        WHERE id = #{id}
    </update>

    <!-- 查询所有有效分类（用于构建树结构） -->
    <select id="selectAllActiveCategories" resultMap="CategoryDTOResultMap">
        SELECT 
            c.id,
            c.name,
            c.description,
            c.parent_id,
            p.name as parent_name,
            c.icon_url,
            c.sort,
            CASE 
                WHEN c.parent_id = 0 THEN 1
                ELSE (
                    CASE 
                        WHEN (SELECT parent_id FROM t_category WHERE id = c.parent_id AND status != 'inactive') = 0 THEN 2
                        ELSE 3
                    END
                )
            END as level,
            c.content_count,
            c.status,
            c.create_time,
            c.update_time
        FROM t_category c
        LEFT JOIN t_category p ON c.parent_id = p.id AND p.status != 'inactive'
        WHERE c.status = 'active'
        ORDER BY c.parent_id ASC, c.sort ASC, c.create_time ASC
    </select>

    <!-- 根据父级ID计算分类级别 -->
    <select id="calculateCategoryLevel" resultType="int">
        <choose>
            <when test="parentId == null or parentId == 0">
                SELECT 1
            </when>
            <otherwise>
                SELECT 
                    CASE 
                        WHEN parent_id = 0 THEN 2
                                            WHEN (SELECT parent_id FROM t_category WHERE id = #{parentId} AND status != 'inactive') = 0 THEN 2
                    ELSE 3
                END
            FROM t_category
            WHERE id = #{parentId} AND status != 'inactive'
            </otherwise>
        </choose>
    </select>

    <!-- 查询分类名称 -->
    <select id="selectCategoryNameById" resultType="string">
        SELECT name
        FROM t_category
        WHERE id = #{id} AND status != 'inactive'
    </select>

    <!-- 查询分类的父分类ID -->
    <select id="selectParentIdById" resultType="java.lang.Long">
        SELECT parent_id
        FROM t_category
        WHERE id = #{id} AND status != 'inactive'
    </select>

</mapper>
